package com.householdreminder.mappings;

// Generated Jan 11, 2015 1:43:28 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", catalog = "householdreminder")
public class Category implements java.io.Serializable {

	private Integer categoryId;
	private User user;
	private String categoryName;
	private Date updatedOn;
	private Set items = new HashSet(0);

	public Category() {
	}

	public Category(User user, Date updatedOn) {
		this.user = user;
		this.updatedOn = updatedOn;
	}

	public Category(User user, String categoryName, Date updatedOn, Set items) {
		this.user = user;
		this.categoryName = categoryName;
		this.updatedOn = updatedOn;
		this.items = items;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "CategoryId", unique = true, nullable = false)
	public Integer getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(Integer categoryId) {
		this.categoryId = categoryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UserId", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "CategoryName", length = 300)
	public String getCategoryName() {
		return this.categoryName;
	}

	public void setCategoryName(String categoryName) {
		this.categoryName = categoryName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedOn", nullable = false, length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set getItems() {
		return this.items;
	}

	public void setItems(Set items) {
		this.items = items;
	}

}
